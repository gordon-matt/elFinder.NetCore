<textarea></textarea>

@*<script src="~/lib/tinymce/jquery.tinymce.min.js"></script>*@
<script src="~/lib/tinymce-dist/tinymce.min.js"></script>

<script type="text/javascript">
    tinymce.init({
        promotion: false,
        selector: "textarea", height: 300,
        plugins: [
            "preview",
            "importcss",
            "searchreplace",
            "autolink",
            "autosave",
            "save",
            "directionality",
            "code",
            "visualblocks",
            "visualchars",
            "fullscreen",
            "image",
            "link",
            "media",
            // "template", ## Deprecated. Consider using advanced template (not used since it is a premium feature) (https://www.tiny.cloud/docs/tinymce/latest/advanced-templates/)
            "codesample",
            "table",
            "charmap",
            "pagebreak",
            "nonbreaking",
            "anchor",
            "insertdatetime",
            "advlist",
            "lists",
            "wordcount",
            "help",
            "charmap",
            "quickbars",
            "emoticons",
            "accordion"
        ],
        toolbar1: "undo redo | bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | styleselect",
        toolbar2: "| link unlink anchor | image media | forecolor backcolor  | print preview code ",
        image_advtab: true,
        file_picker_callback: elFinderBrowser
    });

    // https://github.com/Studio-42/elFinder/wiki/Integration-with-TinyMCE-4.x
    function elFinderBrowser(callback, value, meta) {
        tinymce.activeEditor.windowManager.openUrl({
            url: '/tiny-mce/browse',
            title: 'File Manager',
            width: 900,
            height: 450,
            resizable: 'yes',
            onMessage: function (api, data) {
                if (data.mceAction.file) {
                    var file = data.mceAction.file
                    // When a file is selected, pass the URL to the callback
                    callback(file.url, { alt: file.name });
                    // Close the file manager dialog
                    api.close();
                }
            }
        });
        return false;
    }
</script>